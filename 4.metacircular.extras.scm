(define (install-extras)
  (map global-eval
       '((define (enumerate-interval low high)
           (if (> low high) '()
             (cons low (enumerate-interval (+ low 1) high))))
         (define (map proc seq)
           (if (null? seq)
             '()
             (cons (proc (car seq))
                   (map proc (cdr seq)))))
         (define (filter pred seq)
           (cond ((null? seq) '())
                 ((pred (car seq))
                  (cons (car seq)
                        (filter pred (cdr seq))))
                 (else (filter pred (cdr seq)))))
         (define (accumulate op initial sequence)
           (if (null? sequence) initial
             (op (car sequence)
                 (accumulate op initial (cdr sequence)))))
         (define (list-ref items n)
           (if (= n 0)
             (car items)
             (list-ref (cdr items) (- n 1))))))
  'ok)
